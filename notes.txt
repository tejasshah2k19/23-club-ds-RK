DS ? why we need ds ? 


DS -> data -> store -> read -> manipulate 

1)time complexity  ->time taken by algo  
2)space complexity ->space taken by algo 


for(int i=1;i<=10;i++){
 printf("hi");
}

B=> 1 second 
A=> 1 , 2 , 3 2  1 3 => 2 second 
W=> 3
 
-------------------------------------------------------------------------
                                DS 
        Linear                                  NonLinear 
Array , Stack , Queue , LinkedList              Tree , Graph , HashTable 




Queue -> FirstInFirstOut -> fcfs 
Stack -> LastInFirstOut => lifo 

whatsapp -> chat 
camera -> gallery 


-------------------------------------------------

linkedlist -->          node 
                data               address

struct 

class 


                



x =>  [  11  21  31 41  ]

y =>  [  22 32  45 52   ]

xy => [   11 21 22 31 32 41 45 52  ]

----------------------------------------------------------------

non linear -> 

        tree#    
        graph 


        forest-> node -> n number node connected 
        binary tree -> node -> max 2 node connected {0,1,2}
                 binary search tree [ BST ] -> parent node-> small left | big right 
                        1) it is a binary tree ( child : 0 1 2 )
                        2) left < parent < right 
                        
         








